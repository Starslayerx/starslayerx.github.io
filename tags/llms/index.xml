<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LLMs on Starslayerx' Blog</title><link>https://starslayerx.github.io/tags/llms/</link><description>Recent content in LLMs on Starslayerx' Blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Tue, 02 Sep 2025 08:00:00 +0800</lastBuildDate><atom:link href="https://starslayerx.github.io/tags/llms/index.xml" rel="self" type="application/rss+xml"/><item><title>How AI Assistants Make Precise Edits to Your Files</title><link>https://starslayerx.github.io/posts/how-ai-assistants-make-precise-edits-to-your-files/</link><pubDate>Tue, 02 Sep 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/how-ai-assistants-make-precise-edits-to-your-files/</guid><description>&lt;p>之前的文章介绍了如何制作一个基本的 AI 编程助手, 今天更近一步, 探讨 AI 助手如何对文件进行精确的修改.&lt;/p>
&lt;blockquote>
&lt;p>实际的 AI Agent 不会读取所有的项目代码, 一般只会读取当前文件的代码, 当需要时才会去读取相关的代码文件. 然而, 输出也不会输出要修改的整个文件的代码, 因为这样输出不仅很慢, 同时成本也很高, 会有大量重复代码导致浪费(以 deepseek 为例, 输出 token 的价格是输入 token 价格的3倍, 是缓存命中输入 token 价格的24倍!), 因此一般是让模型输出要修改的代码和修改后的代码.&lt;/p></description></item><item><title>Make an AI Coding Agent in python</title><link>https://starslayerx.github.io/posts/make-an-ai-coding-agent-in-python/</link><pubDate>Mon, 01 Sep 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/make-an-ai-coding-agent-in-python/</guid><description>&lt;p>这篇文件介绍如何使用 Python 制作一个基础的 AI 编程助手&lt;/p>
&lt;h2 id="minimal-ai-coding-agent">Minimal AI Coding Agent&lt;/h2>
&lt;p>下面是一个 AI Coding Agent 至少需要的功能&lt;/p>
&lt;ol>
&lt;li>Chat loop 对话循环&lt;/li>
&lt;li>Call an LLM 调用大语言模型&lt;/li>
&lt;li>Add tools to call 增加工具调用&lt;/li>
&lt;li>Handle tool request 处理工具调用请求&lt;/li>
&lt;/ol>
&lt;h3 id="step-1-chat-loop">Step 1: Chat Loop&lt;/h3>
&lt;p>首先, 聊天循环一直循环等待用户输入, Python 的 &amp;ldquo;input&amp;rdquo; 方法可以获取用户输入&lt;/p></description></item><item><title>Prompt Organization</title><link>https://starslayerx.github.io/posts/prompt-organization/</link><pubDate>Thu, 28 Aug 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/prompt-organization/</guid><description>&lt;p>这篇文章旨在介绍 Python 中常用的提示词组织方式&lt;/p>
&lt;h3 id="f-string">f-string&lt;/h3>
&lt;p>使用 f 字符串填充变量得到提示词&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_prompt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SYSTEM_PROMPT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">多行提示词, 也可以填充变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">USER_PROMPT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;INPUT:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">....
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;system&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">SYSTEM_PROMPT&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">USER_PROMPT&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这种方法实现简单, 速度快, 但是:&lt;/p>
&lt;ol>
&lt;li>多行字符串由于填充变量的需要, 需写在函数内, 导致代码格式混乱
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 实际上, 多行字符串还可以这样实现, 但也不太时候提示词太多的时候, 但这样代码格式会更加优雅&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">system_prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;你是一名&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">role&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">负责...&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;具体规则:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;1. ....&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;2. ....&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>上面这种方法会将多行字符串合并, 注意不要加逗号, 不然就变成元组了&lt;/li>
&lt;li>通过代码构造提示词, 任何修改都需要修改代码, 扩展性差&lt;/li>
&lt;/ol>
&lt;h3 id="stringtemplate">string.Template&lt;/h3>
&lt;p>使用 Python 元素字符串模板&lt;/p></description></item></channel></rss>