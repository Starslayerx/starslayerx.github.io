<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Starslayerx' Blog</title><link>https://starslayerx.github.io/tags/docker/</link><description>Recent content in Docker on Starslayerx' Blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Fri, 05 Sep 2025 08:00:00 +0800</lastBuildDate><atom:link href="https://starslayerx.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker - Images and Registeries</title><link>https://starslayerx.github.io/posts/docker-images-and-registeries/</link><pubDate>Fri, 05 Sep 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/docker-images-and-registeries/</guid><description>&lt;h3 id="the-docker-images--docker-镜像">The Docker Images | Docker 镜像&lt;/h3>
&lt;p>Image、OCI Image、Docker Image、Container Image 都是指同一个概念镜像的不容叫法.&lt;/p>
&lt;p>镜像是一个轻量、只读且不可变的蓝图, 指定了应用运行所谁要的一切, 以及在 Docker 系统上如何运行.
就像是一份配方, 包括所有必要的原料, 诸如依赖、配置、环境设置和你的应用代码, 以及确保应用每次都能稳定运行的详细指令.&lt;/p></description></item><item><title>Docker - Engine</title><link>https://starslayerx.github.io/posts/docker-engine/</link><pubDate>Thu, 04 Sep 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/docker-engine/</guid><description>&lt;p>Docker 引擎(Docker Engine), 顾名思义，是 Docker 的核心.
它为 Docker 提供动力, 并承担所有繁重的工作.
本文将深入探讨这一关键组件的内部运作, 以便了解 Docker 在内核下是如何工作的.&lt;/p></description></item><item><title>Docker - History</title><link>https://starslayerx.github.io/posts/docker-history/</link><pubDate>Wed, 03 Sep 2025 08:00:00 +0800</pubDate><guid>https://starslayerx.github.io/posts/docker-history/</guid><description>&lt;h2 id="the-docker-story---part1-docker-history">The Docker Story - Part1: Docker History&lt;/h2>
&lt;p>docCloud - 也就是开发 Docker 的公司, 最初是一家 PaaS(平台即服务)公司, 他们在 PaaS 领域并没有太大的成功, 但他们构建了一个可以无缝管理客户系统与架构的工具: Docker. 2013 年, 他们决定放弃 PaaS 服务, 将全部精力投入到 Docker 这款产品上.&lt;/p></description></item></channel></rss>